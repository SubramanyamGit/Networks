name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ADMIN_USERNAME: "azureuser"
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      RESOURCE_GROUP_NAME: "Network-latest-10"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init

      # Import Network Security Group if it exists
      - name: Import Network Security Group into Terraform State
        if: |
          az network nsg show --name Network-NSG --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ env.ARM_SUBSCRIPTION_ID }} &>/dev/null
        working-directory: terraform
        run: terraform import azurerm_network_security_group.nsg "/subscriptions/${{ env.ARM_SUBSCRIPTION_ID }}/resourceGroups/${{ env.RESOURCE_GROUP_NAME }}/providers/Microsoft.Network/networkSecurityGroups/Network-NSG"

      # Import Virtual Network if it exists
      - name: Import Virtual Network into Terraform State
        if: |
          az network vnet show --name Network-VNET --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ env.ARM_SUBSCRIPTION_ID }} &>/dev/null
        working-directory: terraform
        run: terraform import azurerm_virtual_network.vnet "/subscriptions/${{ env.ARM_SUBSCRIPTION_ID }}/resourceGroups/${{ env.RESOURCE_GROUP_NAME }}/providers/Microsoft.Network/virtualNetworks/Network-VNET"

      # Import Public IP if it exists
      - name: Import Public IP into Terraform State
        if: |
          az network public-ip show --name Network-PIP --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ env.ARM_SUBSCRIPTION_ID }} &>/dev/null
        working-directory: terraform
        run: terraform import azurerm_public_ip.pip "/subscriptions/${{ env.ARM_SUBSCRIPTION_ID }}/resourceGroups/${{ env.RESOURCE_GROUP_NAME }}/providers/Microsoft.Network/publicIPAddresses/Network-PIP"

      - name: Apply Terraform Configuration
        working-directory: terraform
        run: terraform apply -auto-approve -var="admin_username=${{ env.ADMIN_USERNAME }}" -var="admin_password=${{ env.ADMIN_PASSWORD }}"

      - name: Debug Terraform outputs
        working-directory: terraform
        run: |
          terraform output
          terraform output -json

      # Check if Network Security Group (NSG) exists in Azure
      - name: Check if NSG exists in Azure
        run: |
          az network nsg show --name Network-NSG --resource-group ${{ env.RESOURCE_GROUP_NAME }} --subscription ${{ env.ARM_SUBSCRIPTION_ID }} || echo "NSG not found"




